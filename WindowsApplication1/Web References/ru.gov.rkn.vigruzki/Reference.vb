'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
'
Namespace ru.gov.rkn.vigruzki
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="OperatorRequestPortBinding", [Namespace]:="http://vigruzki.rkn.gov.ru/OperatorRequest/")>  _
    Partial Public Class OperatorRequestService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getLastDumpDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLastDumpDateExOperationCompleted As System.Threading.SendOrPostCallback
        
        Private sendRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getResultOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WindowsApplication1.My.MySettings.Default.WindowsApplication1_ru_gov_rkn_vigruzki_OperatorRequestService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getLastDumpDateCompleted As getLastDumpDateCompletedEventHandler
        
        '''<remarks/>
        Public Event getLastDumpDateExCompleted As getLastDumpDateExCompletedEventHandler
        
        '''<remarks/>
        Public Event sendRequestCompleted As sendRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event getResultCompleted As getResultCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vigruzki.rkn.gov.ru/services/OperatorRequest/getLastDumpDate", RequestNamespace:="http://vigruzki.rkn.gov.ru/OperatorRequest/", ResponseNamespace:="http://vigruzki.rkn.gov.ru/OperatorRequest/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLastDumpDate() As <System.Xml.Serialization.XmlElementAttribute("lastDumpDate", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Long
            Dim results() As Object = Me.Invoke("getLastDumpDate", New Object(-1) {})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLastDumpDateAsync()
            Me.getLastDumpDateAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLastDumpDateAsync(ByVal userState As Object)
            If (Me.getLastDumpDateOperationCompleted Is Nothing) Then
                Me.getLastDumpDateOperationCompleted = AddressOf Me.OngetLastDumpDateOperationCompleted
            End If
            Me.InvokeAsync("getLastDumpDate", New Object(-1) {}, Me.getLastDumpDateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLastDumpDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLastDumpDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLastDumpDateCompleted(Me, New getLastDumpDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vigruzki.rkn.gov.ru/services/OperatorRequest/getLastDumpDateEx", RequestNamespace:="http://vigruzki.rkn.gov.ru/OperatorRequest/", ResponseNamespace:="http://vigruzki.rkn.gov.ru/OperatorRequest/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLastDumpDateEx(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef lastDumpDateUrgently As Long, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef webServiceVersion As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef dumpFormatVersion As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef docVersion As String) As <System.Xml.Serialization.XmlElementAttribute("lastDumpDate", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Long
            Dim results() As Object = Me.Invoke("getLastDumpDateEx", New Object(-1) {})
            lastDumpDateUrgently = CType(results(1),Long)
            webServiceVersion = CType(results(2),String)
            dumpFormatVersion = CType(results(3),String)
            docVersion = CType(results(4),String)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLastDumpDateExAsync()
            Me.getLastDumpDateExAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLastDumpDateExAsync(ByVal userState As Object)
            If (Me.getLastDumpDateExOperationCompleted Is Nothing) Then
                Me.getLastDumpDateExOperationCompleted = AddressOf Me.OngetLastDumpDateExOperationCompleted
            End If
            Me.InvokeAsync("getLastDumpDateEx", New Object(-1) {}, Me.getLastDumpDateExOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLastDumpDateExOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLastDumpDateExCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLastDumpDateExCompleted(Me, New getLastDumpDateExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vigruzki.rkn.gov.ru/services/OperatorRequest/sendRequest", RequestNamespace:="http://vigruzki.rkn.gov.ru/OperatorRequest/", ResponseNamespace:="http://vigruzki.rkn.gov.ru/OperatorRequest/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function sendRequest(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary")> ByVal requestFile() As Byte, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary")> ByVal signatureFile() As Byte, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal dumpFormatVersion As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef resultComment As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef code As String) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Boolean
            Dim results() As Object = Me.Invoke("sendRequest", New Object() {requestFile, signatureFile, dumpFormatVersion})
            resultComment = CType(results(1),String)
            code = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub sendRequestAsync(ByVal requestFile() As Byte, ByVal signatureFile() As Byte, ByVal dumpFormatVersion As String)
            Me.sendRequestAsync(requestFile, signatureFile, dumpFormatVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub sendRequestAsync(ByVal requestFile() As Byte, ByVal signatureFile() As Byte, ByVal dumpFormatVersion As String, ByVal userState As Object)
            If (Me.sendRequestOperationCompleted Is Nothing) Then
                Me.sendRequestOperationCompleted = AddressOf Me.OnsendRequestOperationCompleted
            End If
            Me.InvokeAsync("sendRequest", New Object() {requestFile, signatureFile, dumpFormatVersion}, Me.sendRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnsendRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.sendRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent sendRequestCompleted(Me, New sendRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vigruzki.rkn.gov.ru/services/OperatorRequest/getResult", RequestNamespace:="http://vigruzki.rkn.gov.ru/OperatorRequest/", ResponseNamespace:="http://vigruzki.rkn.gov.ru/OperatorRequest/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getResult(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal code As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef resultComment As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary")> ByRef registerZipArchive() As Byte, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef resultCode As Integer, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef dumpFormatVersion As String) As <System.Xml.Serialization.XmlElementAttribute("result", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> Boolean
            Dim results() As Object = Me.Invoke("getResult", New Object() {code})
            resultComment = CType(results(1),String)
            registerZipArchive = CType(results(2),Byte())
            resultCode = CType(results(3),Integer)
            dumpFormatVersion = CType(results(4),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getResultAsync(ByVal code As String)
            Me.getResultAsync(code, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getResultAsync(ByVal code As String, ByVal userState As Object)
            If (Me.getResultOperationCompleted Is Nothing) Then
                Me.getResultOperationCompleted = AddressOf Me.OngetResultOperationCompleted
            End If
            Me.InvokeAsync("getResult", New Object() {code}, Me.getResultOperationCompleted, userState)
        End Sub
        
        Private Sub OngetResultOperationCompleted(ByVal arg As Object)
            If (Not (Me.getResultCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getResultCompleted(Me, New getResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getLastDumpDateCompletedEventHandler(ByVal sender As Object, ByVal e As getLastDumpDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLastDumpDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getLastDumpDateExCompletedEventHandler(ByVal sender As Object, ByVal e As getLastDumpDateExCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLastDumpDateExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lastDumpDateUrgently() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property webServiceVersion() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dumpFormatVersion() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property docVersion() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub sendRequestCompletedEventHandler(ByVal sender As Object, ByVal e As sendRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class sendRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property resultComment() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property code() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getResultCompletedEventHandler(ByVal sender As Object, ByVal e As getResultCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getResultCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property resultComment() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property registerZipArchive() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Byte())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property resultCode() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dumpFormatVersion() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
    End Class
End Namespace
